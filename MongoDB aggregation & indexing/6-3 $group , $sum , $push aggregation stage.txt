// Example of grouping based on gender
db.getCollection("practice-data").aggregate([

    // Stage 1: Group by gender
    { $group: { _id: "$gender" } }

])

// Output
{
	"_id" : "Non-binary"
},
{
	"_id" : "Genderfluid"
},
{
	"_id" : "Agender"
}

// Example of grouping based on age
db.getCollection("practice-data").aggregate([

    // Stage 1: Group by age and count the number of records for each age
    { $group: { _id: "$age", count: { $sum: 1 } } }

])

// Example of grouping based on country
// Using $sum as an accumulator operator
db.getCollection("practice-data").aggregate([

    // Stage 1: Group by country and count the number of records for each country
    { $group: { _id: "$address.country", count: { $sum: 1 } } }

])

// Output
{
	"_id" : "Russia",
	"count" : 6
},
{
	"_id" : "Zambia",
	"count" : 1
},
{
	"_id" : "Peru",
	"count" : 4
},
{
	"_id" : "Thailand",
	"count" : 1
}

// Example of grouping names based on country
// Using $push to show the names of users who live in each country
db.getCollection("practice-data").aggregate([

    // Stage 1: Group by country and push the names of the users
    { $group: { _id: "$address.country", showName: { $push: "$name" } } }

])

// Output
{
	"_id" : "Zambia",
	"showName" : [
		{
			"firstName" : "Addi",
			"lastName" : "Nystrom"
		}
	]
},
{
	"_id" : "Brazil",
	"showName" : [
		{
			"firstName" : "Wilmer",
			"lastName" : "Lavens"
		},
		{
			"firstName" : "Dru",
			"lastName" : "Drewes"
		},
		{
			"firstName" : "Wesley",
			"lastName" : "Mercik"
		},
		{
			"firstName" : "Gretal",
			"lastName" : "Kemitt"
		}
	]
},
{
	"_id" : "Peru",
	"showName" : [
		{
			"firstName" : "Clotilda",
			"lastName" : "Pinckard"
		},
		{
			"firstName" : "Cacilie",
			"lastName" : "Boyack"
		},
		{
			"firstName" : "Lindy",
			"lastName" : "Shireff"
		},
		{
			"firstName" : "Galvan",
			"lastName" : "Clute"
		}
	]
}

// Example of grouping based on country, counting users, and pushing their names
db.getCollection("practice-data").aggregate([

    // Stage 1: Group by country, count users, and push their names
    { $group: { _id: "$address.country", count: { $sum: 1 }, showName: { $push: "$name" } } }

])

// Output
{
	"_id" : "Zambia",
	"count" : 1,
	"showName" : [
		{
			"firstName" : "Addi",
			"lastName" : "Nystrom"
		}
	]
},
{
	"_id" : "Brazil",
	"count" : 4,
	"showName" : [
		{
			"firstName" : "Wilmer",
			"lastName" : "Lavens"
		},
		{
			"firstName" : "Dru",
			"lastName" : "Drewes"
		},
		{
			"firstName" : "Wesley",
			"lastName" : "Mercik"
		},
		{
			"firstName" : "Gretal",
			"lastName" : "Kemitt"
		}
	]
},
{
	"_id" : "Peru",
	"count" : 4,
	"showName" : [
		{
			"firstName" : "Clotilda",
			"lastName" : "Pinckard"
		},
		{
			"firstName" : "Cacilie",
			"lastName" : "Boyack"
		},
		{
			"firstName" : "Lindy",
			"lastName" : "Shireff"
		},
		{
			"firstName" : "Galvan",
			"lastName" : "Clute"
		}
	]
}

// Example of grouping based on country, counting users, and retrieving full documents
db.getCollection("practice-data").aggregate([

    // Stage 1: Group by country, count users, and push full documents (using $$ROOT)
    { $group: { _id: "$address.country", count: { $sum: 1 }, fullDoc: { $push: "$$ROOT" } } }

])

// Output
{
	"_id" : "Zambia",
	"count" : 1,
	"fullDoc" : [
		{
			"_id" : ObjectId("6406ad65fc13ae5a400000a5"),
			"name" : {
				"firstName" : "Addi",
				"lastName" : "Nystrom"
			},
			"email" : "anystrom1t@blogspot.com",
			"phone" : "(844) 7062406",
			"gender" : "Female",
			"age" : 3,
			"birthday" : "4/7/2022",
			"address" : {
				"street" : "8 Lunder Place",
				"city" : "Mwense",
				"country" : "Zambia"
			},
			"company" : "Buzzdog",
			"favoutiteColor" : "Violet",
			"friends" : [ "Mezbaul Abedin", "Tanmoy Parvez", "Fahim Ahammed Firoz", "Nahid Hasan Bulbul", "Mir Hussain" ],
			"occupation" : "Accountant III",
			"interests" : [ "Gardening", "Writing", "Reading" ],
			"skills" : [
				{
					"name" : "RUBY",
					"level" : "Beginner",
					"isLearning" : true
				},
				{
					"name" : "JAVASCRIPT",
					"level" : "Expert",
					"isLearning" : false
				}
			],
			"education" : [
				{
					"degree" : "Master of Business Administration",
					"major" : "Education",
					"institute" : "Shandong Economic University",
					"year" : 2011
				}
			],
			"languages" : [ "Maltese", "Lithuanian", "Pashto" ],
			"ipAddress" : "46.121.164.165",
			"salary" : 282
		}
	]
},
{
	"_id" : "Brazil",
	"count" : 4,
	"fullDoc" : [
		{
			"_id" : ObjectId("6406ad64fc13ae5a4000007c"),
			"name" : {
				"firstName" : "Wilmer",
				"lastName" : "Lavens"
			},
			"email" : "wlavenso@photobucket.com",
			"phone" : "(395) 9268658",
			"gender" : "Male",
			"age" : 16,
			"birthday" : "3/2/2022",
			"address" : {
				"street" : "182 Jackson Parkway",
				"city" : "Ouro Branco",
				"postalCode" : "59347-000",
				"country" : "Brazil"
			},
			"company" : "Ailane",
			"favoutiteColor" : "Goldenrod",
			"friends" : [ "Fahim Ahammed Firoz", "Abdur Rakib", "Mir Hussain", "Rasel Ahmed" ],
			"occupation" : "Assistant Media Planner",
			"interests" : [ "Travelling", "Gaming", "Writing" ],
			"skills" : [
				{
					"name" : "GO",
					"level" : "Expert",
					"isLearning" : true
				},
				{
					"name" : "JAVA",
					"level" : "Expert",
					"isLearning" : false
				},
				{
					"name" : "KOTLIN",
					"level" : "Expert",
					"isLearning" : false
				}
			],
			"education" : [
				{
					"degree" : "Bachelor of Science",
					"major" : "Chemical Engineering",
					"institute" : "Universidade Federal do Acre",
					"year" : 2015
				}
			],
			"languages" : [ "Telugu", "Macedonian", "Kurdish" ],
			"ipAddress" : "157.214.155.124",
			"salary" : 243
		},
		// other documents
	]
}
